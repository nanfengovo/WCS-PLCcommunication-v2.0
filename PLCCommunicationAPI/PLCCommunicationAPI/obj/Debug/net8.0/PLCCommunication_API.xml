<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PLCCommunication_API</name>
    </assembly>
    <members>
        <member name="T:PLCCommunication_API.Controllers.AuthorizeController">
            <summary>
            鉴权模块
            </summary>
        </member>
        <member name="M:PLCCommunication_API.Controllers.AuthorizeController.Login(PLCCommunication_Utility.Request.CheckRequestInfo)">
            <summary>
            登录鉴权
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="T:PLCCommunication_API.Controllers.ModbusTCPController">
            <summary>
            ModbusTCPController中是关于和支持MobusTCP协议通讯的
            </summary>
        </member>
        <member name="M:PLCCommunication_API.Controllers.ModbusTCPController.GetAllConfig">
            <summary>
            获取所有的Modbus配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:PLCCommunication_API.Controllers.ModbusTCPController.CreateModbusTCPConfig(System.String,System.String,System.Int32,System.Byte,System.Byte,System.UInt16,System.UInt16)">
            <summary>
            新建ModbusTCP配置
            </summary>
            <param name="modbusTCPConfig">The Modbus TCP configuration to create.</param>
            <returns>A result indicating success or failure.</returns>
        </member>
        <member name="T:PLCCommunication_API.Controllers.S7Controller">
            <summary>
            S7Controller用来处理和S7协议相关的
            </summary>
        </member>
        <member name="M:PLCCommunication_API.Controllers.S7Controller.AddS7Config(PLCCommunication_Model.DTO.S7ConfigDTO)">
            <summary>
            新增S7配置
            </summary>
            <param name="s7ConfigDTO"></param>
            <returns></returns>
        </member>
        <member name="M:PLCCommunication_API.Controllers.S7Controller.GetAllS7Configs">
            <summary>
            获取所有的S7配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:PLCCommunication_API.Controllers.S7Controller.DeleteById(System.Collections.Generic.List{System.Int32})">
            <summary>
            根据id删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PLCCommunication_API.Controllers.S7Controller.Enable(System.Int32)">
            <summary>
            启用配置
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PLCCommunication_API.Controllers.S7Controller.Disable(System.Int32)">
            <summary>
            禁用
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:PLCCommunication_API.Controllers.UserController">
            <summary>
            用户管理的模块
            </summary>
        </member>
        <member name="M:PLCCommunication_API.Controllers.UserController.GetAllUsersAsync">
            <summary>
            获取所有的用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:PLCCommunication_API.Controllers.UserController.CreateUser(PLCCommunication_Model.APIModel.CreateUserRequest)">
            <summary>
            添加用户
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:PLCCommunication_API.Controllers.UserController.UserToRole(PLCCommunication_Model.APIModel.UserToRole)">
            <summary>
            给用户分配角色
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:PLCCommunication_API.Controllers.UserController.DelUserByUserName(System.String)">
            <summary>
            根据用户名删除用户
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="T:PLCCommunicationAPI.Controllers.TestController">
            <summary>
            测试一些新加入系统的新功能
            </summary>
        </member>
        <member name="M:PLCCommunicationAPI.Controllers.TestController.TestAuthorize">
            <summary>
            管理员才可以访问
            </summary>
            <returns></returns>
        </member>
        <member name="M:PLCCommunicationAPI.IdentityIOC.AddIdentityIOC(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注入Identity
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:PLCCommunication_Utility.PlugInUnit.SwaggerPlugInUnit">
            <summary>
            swagger插件
            </summary>
        </member>
        <member name="M:PLCCommunication_Utility.PlugInUnit.SwaggerPlugInUnit.InitSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            初始化Swagger
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:PLCCommunication_Utility.PlugInUnit.SwaggerPlugInUnit.InitSwagger(Microsoft.AspNetCore.Builder.WebApplication)">
            <summary>
            swagger加入路由和管道
            </summary>
            <param name="app"></param>
        </member>
    </members>
</doc>
